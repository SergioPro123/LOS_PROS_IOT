{"version":3,"sources":["webpack:///src/app/components/register/register.page.html","webpack:///src/app/components/register/register-routing.module.ts","webpack:///src/app/components/register/register.module.ts","webpack:///src/app/components/register/register.page.scss","webpack:///src/app/components/register/register.page.ts"],"names":["routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPageModule","declarations","RegisterPage","auth","router","alertController","email","password","cpassword","name","showAlert","console","error","register","then","res","navigate","err","header","message","create","buttons","alert","present","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,yBAAyB;AAAA;AAAA,KAAtC;;AAAaA,6BAAyB,6DAJrC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,kBAAkB;AAAA;AAAA,KAA/B;;AAAaA,sBAAkB,6DAT9B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kFAJO,CADD;AAORI,kBAAY,EAAE,CAAC,2DAAD;AAPN,KAAT,CAS8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAaE,YAAY;AAMvB,4BACSC,IADT,EAESC,MAFT,EAGSC,eAHT,EAGyC;AAAA;;AAFhC,aAAAF,IAAA,GAAAA,IAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AART,aAAAC,KAAA,GAAa,EAAb;AACA,aAAAC,QAAA,GAAkB,EAAlB;AACA,aAAAC,SAAA,GAAiB,EAAjB;AACA,aAAAC,IAAA,GAAY,EAAZ;AAMK;;AAVkB;AAAA;AAAA,mCAYZ,CACV;AAbsB;AAAA;AAAA,qCAcb;AAAA;;AACR,cAAG,KAAKF,QAAL,IAAiB,KAAKC,SAAzB,EAAmC;AACjC,iBAAKE,SAAL,CAAe,QAAf,EAAwB,wBAAxB;AACA,mBAAOC,OAAO,CAACC,KAAR,CAAc,wBAAd,CAAP;AACD,WAHD,MAGK;AACH,iBAAKT,IAAL,CAAUU,QAAV,CAAmB,KAAKP,KAAxB,EAA8B,KAAKC,QAAnC,EAA4C,KAAKE,IAAjD,EAAuDK,IAAvD,CAA4D,UAAAC,GAAG,EAAE;AAC/D,mBAAI,CAACL,SAAL,CAAe,UAAf,EAA0B,gBAAc,KAAI,CAACD,IAA7C;;AACA,mBAAI,CAACL,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,aAHD,WAGS,UAAAC,GAAG;AAAA,qBAAG,KAAI,CAACP,SAAL,CAAe,QAAf,EAAwBO,GAAxB,CAAH;AAAA,aAHZ;AAID;AACF;AAxBsB;AAAA;AAAA,kCAyBPC,MAzBO,EAyBQC,OAzBR,EAyBsB;;;;;;;;AAC7B,2BAAM,KAAKd,eAAL,CAAqBe,MAArB,CAA4B;AAC9CF,4BAAM,EAANA,MAD8C;AAE9CC,6BAAO,EAAPA,OAF8C;AAG9CE,6BAAO,EAAC,CAAC,IAAD;AAHsC,qBAA5B,CAAN;;;AAARC,yB;;AAKN,2BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AAhCsB;;AAAA;AAAA,OAAzB;;;;cAOgB;;cACE;;cACU;;;;AATfrB,gBAAY,6DALxB,gEAAU;AACTsB,cAAQ,EAAE,cADD;AAETC,cAAQ,EAAR;AAAA;AAAA,2GAFS;;;;AAAA,KAAV,CAKwB,GAAZvB,YAAY,CAAZ","file":"components-register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title class=\\\"ion-text-center\\\">Registro</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-list>\\r\\n  \\r\\n    <ion-item>\\r\\n    <ion-label position=\\\"floating\\\">Nombre Usuario</ion-label>\\r\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"name\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n    <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    \\r\\n    <ion-item>\\r\\n    <ion-label position=\\\"floating\\\">Contrase単a</ion-label>\\r\\n    <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n    <ion-label position=\\\"floating\\\">Confirmar Contrase単a</ion-label>\\r\\n    <ion-input type=\\\"password\\\" [(ngModel)]=\\\"cpassword\\\"></ion-input>\\r\\n    </ion-item>\\r\\n  \\r\\n  </ion-list>\\r\\n\\r\\n  <ion-button fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"dark\\\" (click)=\\\"OnRegister()\\\">Registrate</ion-button>\\r\\n\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPageRoutingModule } from './register-routing.module';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegisterPageRoutingModule\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from \"@angular/router\";\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  email:string=\"\";\r\n  password:string = \"\";\r\n  cpassword:string=\"\";\r\n  name:string=\"\";\r\n\r\n  constructor(\r\n    public auth:AuthService,\r\n    public router:Router,\r\n    public alertController: AlertController,\r\n    ){}\r\n\r\n  ngOnInit() {\r\n  }\r\n  OnRegister(){\r\n    if(this.password != this.cpassword){\r\n      this.showAlert(\"Error!\",\"Contrase単a no coincide\");\r\n      return console.error(\"Contrase単a no coindice\")\r\n    }else{\r\n      this.auth.register(this.email,this.password,this.name).then(res=>{\r\n        this.showAlert(\"Success!\",\"Bienvenid@ \"+this.name);\r\n        this.router.navigate(['./home']);\r\n      }).catch(err=> this.showAlert(\"Error:\",err))\r\n    }\r\n  }\r\n  async showAlert(header:string, message:string){\r\n    const alert = await this.alertController.create({\r\n      header,\r\n      message,\r\n      buttons:['Ok']\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n"]}